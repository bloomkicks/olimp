(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[396],{5861:function(t,e,i){"use strict";i.d(e,{Z:function(){return j}});var r=i(3366),n=i(7462),a=i(7294),l=i(6010),o=i(9707),s=i(4780),h=i(948),c=i(1657),d=i(8216),p=i(1588),g=i(4867);function x(t){return(0,g.Z)("MuiTypography",t)}(0,p.Z)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var m=i(5893);const u=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],f=(0,h.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:i}=t;return[e.root,i.variant&&e[i.variant],"inherit"!==i.align&&e[`align${(0,d.Z)(i.align)}`],i.noWrap&&e.noWrap,i.gutterBottom&&e.gutterBottom,i.paragraph&&e.paragraph]}})((({theme:t,ownerState:e})=>(0,n.Z)({margin:0},e.variant&&t.typography[e.variant],"inherit"!==e.align&&{textAlign:e.align},e.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},e.gutterBottom&&{marginBottom:"0.35em"},e.paragraph&&{marginBottom:16}))),v={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},Z={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"};var j=a.forwardRef((function(t,e){const i=(0,c.Z)({props:t,name:"MuiTypography"}),a=(t=>Z[t]||t)(i.color),h=(0,o.Z)((0,n.Z)({},i,{color:a})),{align:p="inherit",className:g,component:j,gutterBottom:w=!1,noWrap:b=!1,paragraph:y=!1,variant:B="body1",variantMapping:A=v}=h,S=(0,r.Z)(h,u),W=(0,n.Z)({},h,{align:p,color:a,className:g,component:j,gutterBottom:w,noWrap:b,paragraph:y,variant:B,variantMapping:A}),k=j||(y?"p":A[B]||v[B])||"span",O=(t=>{const{align:e,gutterBottom:i,noWrap:r,paragraph:n,variant:a,classes:l}=t,o={root:["root",a,"inherit"!==t.align&&`align${(0,d.Z)(e)}`,i&&"gutterBottom",r&&"noWrap",n&&"paragraph"]};return(0,s.Z)(o,x,l)})(W);return(0,m.jsx)(f,(0,n.Z)({as:k,ref:e,ownerState:W,className:(0,l.Z)(O.root,g)},S))}))},1926:function(t,e,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/algorithms",function(){return i(4462)}])},702:function(t,e,i){"use strict";i.d(e,{Z:function(){return k}});var r=i(5893),n=i(5861),a=i(7357),l=i(1536),o=i(3366),s=i(7462),h=i(7294),c=i(6010),d=i(4780),p=i(1796),g=i(948),x=i(1657),m=i(1588),u=i(4867);function f(t){return(0,u.Z)("MuiDivider",t)}(0,m.Z)("MuiDivider",["root","absolute","fullWidth","inset","middle","flexItem","light","vertical","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","wrapper","wrapperVertical"]);const v=["absolute","children","className","component","flexItem","light","orientation","role","textAlign","variant"],Z=(0,g.ZP)("div",{name:"MuiDivider",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:i}=t;return[e.root,i.absolute&&e.absolute,e[i.variant],i.light&&e.light,"vertical"===i.orientation&&e.vertical,i.flexItem&&e.flexItem,i.children&&e.withChildren,i.children&&"vertical"===i.orientation&&e.withChildrenVertical,"right"===i.textAlign&&"vertical"!==i.orientation&&e.textAlignRight,"left"===i.textAlign&&"vertical"!==i.orientation&&e.textAlignLeft]}})((({theme:t,ownerState:e})=>(0,s.Z)({margin:0,flexShrink:0,borderWidth:0,borderStyle:"solid",borderColor:(t.vars||t).palette.divider,borderBottomWidth:"thin"},e.absolute&&{position:"absolute",bottom:0,left:0,width:"100%"},e.light&&{borderColor:t.vars?`rgba(${t.vars.palette.dividerChannel} / 0.08)`:(0,p.Fq)(t.palette.divider,.08)},"inset"===e.variant&&{marginLeft:72},"middle"===e.variant&&"horizontal"===e.orientation&&{marginLeft:t.spacing(2),marginRight:t.spacing(2)},"middle"===e.variant&&"vertical"===e.orientation&&{marginTop:t.spacing(1),marginBottom:t.spacing(1)},"vertical"===e.orientation&&{height:"100%",borderBottomWidth:0,borderRightWidth:"thin"},e.flexItem&&{alignSelf:"stretch",height:"auto"})),(({theme:t,ownerState:e})=>(0,s.Z)({},e.children&&{display:"flex",whiteSpace:"nowrap",textAlign:"center",border:0,"&::before, &::after":{position:"relative",width:"100%",borderTop:`thin solid ${(t.vars||t).palette.divider}`,top:"50%",content:'""',transform:"translateY(50%)"}})),(({theme:t,ownerState:e})=>(0,s.Z)({},e.children&&"vertical"===e.orientation&&{flexDirection:"column","&::before, &::after":{height:"100%",top:"0%",left:"50%",borderTop:0,borderLeft:`thin solid ${(t.vars||t).palette.divider}`,transform:"translateX(0%)"}})),(({ownerState:t})=>(0,s.Z)({},"right"===t.textAlign&&"vertical"!==t.orientation&&{"&::before":{width:"90%"},"&::after":{width:"10%"}},"left"===t.textAlign&&"vertical"!==t.orientation&&{"&::before":{width:"10%"},"&::after":{width:"90%"}}))),j=(0,g.ZP)("span",{name:"MuiDivider",slot:"Wrapper",overridesResolver:(t,e)=>{const{ownerState:i}=t;return[e.wrapper,"vertical"===i.orientation&&e.wrapperVertical]}})((({theme:t,ownerState:e})=>(0,s.Z)({display:"inline-block",paddingLeft:`calc(${t.spacing(1)} * 1.2)`,paddingRight:`calc(${t.spacing(1)} * 1.2)`},"vertical"===e.orientation&&{paddingTop:`calc(${t.spacing(1)} * 1.2)`,paddingBottom:`calc(${t.spacing(1)} * 1.2)`})));var w=h.forwardRef((function(t,e){const i=(0,x.Z)({props:t,name:"MuiDivider"}),{absolute:n=!1,children:a,className:l,component:h=(a?"div":"hr"),flexItem:p=!1,light:g=!1,orientation:m="horizontal",role:u=("hr"!==h?"separator":void 0),textAlign:w="center",variant:b="fullWidth"}=i,y=(0,o.Z)(i,v),B=(0,s.Z)({},i,{absolute:n,component:h,flexItem:p,light:g,orientation:m,role:u,textAlign:w,variant:b}),A=(t=>{const{absolute:e,children:i,classes:r,flexItem:n,light:a,orientation:l,textAlign:o,variant:s}=t,h={root:["root",e&&"absolute",s,a&&"light","vertical"===l&&"vertical",n&&"flexItem",i&&"withChildren",i&&"vertical"===l&&"withChildrenVertical","right"===o&&"vertical"!==l&&"textAlignRight","left"===o&&"vertical"!==l&&"textAlignLeft"],wrapper:["wrapper","vertical"===l&&"wrapperVertical"]};return(0,d.Z)(h,f,r)})(B);return(0,r.jsx)(Z,(0,s.Z)({as:h,className:(0,c.Z)(A.root,l),role:u,ref:e,ownerState:B},y,{children:a?(0,r.jsx)(j,{className:A.wrapper,ownerState:B,children:a}):null}))}));var b=()=>(0,r.jsx)(w,{component:"hr",sx:{display:"block",height:2,bgcolor:"#000000",my:3.75}});var y=t=>{let{imgSrc:e,alt:i,width:n,height:l,sx:o}=t;return(0,r.jsx)(a.Z,{component:"img",src:e,alt:i||"",width:n,height:l,sx:{width:"100%",maxWidth:500,borderRight:{md:"1px solid #BBBBBB"},...o}})};var B=t=>{let{title:e,text:i,noPlan:l}=t;return(0,r.jsxs)(a.Z,{mb:l?0:6,sx:{textAlign:{xs:"center",md:"left"},maxWidth:700,width:"100%"},px:3.5,pt:{md:8},children:[(0,r.jsx)(n.Z,{variant:"h2",mb:2,children:e}),(0,r.jsx)(n.Z,{variant:"subtitle1",children:i})]})},A=i(1664),S=i.n(A);var W=t=>{let{title:e,points:i}=t;const o=i.length>6,s=i.length>12;return(0,r.jsxs)(a.Z,{component:"section",textAlign:"center",width:"100%",children:[(0,r.jsx)(n.Z,{variant:"h2",mb:2,children:e||"ПЛАН ОБУЧЕНИЯ"}),(0,r.jsx)(l.Z,{display:"flex",width:o?{xs:"100%",md:"90%",lg:"80%",xl:"75%"}:"fit-content",alignItems:"flex-start",justifyContent:"flex-start",flexWrap:{md:"wrap"},maxHeight:{md:s?415:300},mx:"auto",spacing:1.25,textAlign:"left",px:4,minWidth:340,children:i.map(((t,e)=>(0,r.jsxs)(n.Z,{component:t.href?S():"p",href:t.href||"",color:t.href?"primary.dark":"text.primary",variant:"subtitle1",width:{md:o?"49%":"auto",maxWidth:"fit-content"},sx:{"&:hover":{textDecoration:t.href?"underline":"none"}},children:[e+1,". ",t.title]},e+t.title)))})]})};var k=t=>{let{heading:e,descTitle:i,description:o,planPoints:s,planTitle:h,illustration:c,noPlan:d,sx:p}=t;return(0,r.jsxs)(a.Z,{component:"article",children:[(0,r.jsxs)(l.Z,{direction:{xs:"column",md:"row"},mb:{md:1.5},justifyContent:"center",alignItems:"center",children:[(0,r.jsxs)(a.Z,{display:"flex",alignItems:"center",justifyContent:"center",position:"relative",mt:7.5,mb:6,sx:{width:"100%",maxHeight:300,maxWidth:600,aspectRatio:(c.width/c.height+"").slice(0,4),...p||{}},children:[(0,r.jsx)(n.Z,{variant:"h1",textAlign:"center",sx:{position:"absolute",top:"58%",left:"50%",transform:"translate(-50%, -50%)",width:"100%",px:3,zIndex:10},children:e}),(0,r.jsx)(y,{...c})]}),(0,r.jsx)(B,{title:i,text:o,noPlan:d})]}),!d&&(0,r.jsx)(W,{title:h||"ПЛАН ОБУЧЕНИЯ",points:s}),(0,r.jsx)(b,{})]})}},4192:function(t,e,i){"use strict";var r=i(5893),n=i(5861),a=i(7357);i(7294);e.Z=t=>{let{title:e,children:i,id:l="",sx:o}=t;return(0,r.jsxs)(a.Z,{component:"article",id:l,mb:"30px",px:3.5,minWidth:340,sx:{"& > div":{mt:"7px"},"& > .code":{mt:"13px",mb:"13px"},"& > h2":{mb:"16px"},...o||{}},children:[e&&(0,r.jsx)(n.Z,{variant:"h3",children:e}),i]})}},3810:function(t,e,i){"use strict";i.d(e,{Z:function(){return s}});var r=i(5893);var n=function(t){let e="";return["return","if","pass","def","else","while","for","in"].includes(t)?e="keyword":Number(t).toString()===t||["True","False","None"].includes(t)||'"'===t[0]?e="value":["sum","print","yell","upper","range","say"].includes(t)?e="function":"#"===t[0]?e="comment":["result","user_name","age","access","num","str","num1","num2"].includes(t)&&(e="variable"),e},a=i(1664),l=i.n(a),o=i(5861);var s=t=>{let{children:e,type:i,href:a}=t,s="";"string"==typeof e&&(s=n(e),"this"===a&&(a=e));const h=(i||s).split(" ");return(0,r.jsx)(o.Z,{component:"link"===i?t=>{let{children:e,...i}=t;return(0,r.jsx)(l(),{href:a,...i,children:e})}:"span",variant:"inherit",className:h[0],sx:{color:"text."+h[0]||0,fontWeight:"bold"===h[1]?"bold":""},children:e})}},2895:function(t,e,i){"use strict";var r=i(5893),n=i(7357);i(7294);e.Z=t=>{let{children:e,type:i}=t;return(0,r.jsx)(n.Z,{sx:{"& a":{color:"primary.main",textDecoration:"underline"},pl:(null==i?void 0:i.includes("list"))?2.5:0,"& li":{mt:.75},"& .var-blue":{color:"code.variable"},"& .var-red":{color:"code.keyword"},"& .keyword":{color:"code.keyword"}},children:e})}},4462:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return x}});var r=i(5893),n=i(1664),a=i.n(n),l=i(2630),o=i(3810),s=i(2895),h=i(4192),c=i(7357);var d=()=>(0,r.jsxs)(c.Z,{children:[(0,r.jsxs)(h.Z,{title:"ОСНОВНЫЕ УЧЕБНЫЕ РЕСУРСЫ",children:[(0,r.jsx)(s.Z,{children:"Теперь, разобравшись с Питоном, мы можем приступать к изучению алгоритмов и структур данных. Язык программирова ния можно представить как инструмент, а алгоритмы как чертеж, план решения, который мы воплощаем в реальность этим инструментом"}),(0,r.jsx)(s.Z,{children:"Без чертежа не выйдет ничего хорошего, поэтому нам важно тщательно изучить эту область. В этом нам помогут всемирно признанные книги:"}),(0,r.jsx)(s.Z,{children:"1. «Грокаем алгоритмы» от Адитьи Бхагравой - отличная книга для новичков, просто и понятно обьясняющая нужные нам алгоритмы, структуры данных и концепции в программировании. Также, в качестве языка программирования в ней используется Питон, так что мы сможем попрактиковаться"}),(0,r.jsx)(s.Z,{children:"2. «Алгоритмы. Построение и анализ» от Томаса Кортмэн и других - довольно тяжелая книга, тщательно покрывающая широкий диапазон важных для нас алгоритмов. После ее прочтения вы станите намного лучше разбираться в алгоритмах и сильно увеличите свои шансы на успех в олимпиаде"}),(0,r.jsxs)(s.Z,{children:["Также полезно будет посещение разных лекции и курсов. Хорошими примерами будут"," ",(0,r.jsx)(o.Z,{type:"link",href:"https://fintech.tinkoff.ru/school/generation/algo",children:"Tinkoff Образование"})," ","или"," ",(0,r.jsx)(o.Z,{type:"link",href:"https://education.yandex.ru/inf?utm_source=ya_schoolbook&utm_medium=lp&utm_term=menu&utm_campaign=main",children:"Яндекс Учебник"})]})]}),(0,r.jsxs)(h.Z,{title:"1. ПОНЯТНИЕ АЛГОРИТМОВ И СТРУКТУР ДАННЫХ",id:"algorithms-introduction",children:[(0,r.jsx)(s.Z,{children:"Алгоритмы и структуры данных - важные понятия в вычислительных науках, помогающие эффективно решать задачи различного рода"}),(0,r.jsx)(s.Z,{children:"Алгоритм - это набор инструкций, разработанных для решения конкретной проблемы или выполнения определенной задачи. Алгоритмы можно представить как пошаговые процедуры, которые принимают входные данные и производят выходные. Они являются неотъемлемой частью многих компьютерных программ и используются для выполнения операций, таких как поиск, сортировка и анализ данных"}),(0,r.jsx)(s.Z,{children:"Структуры данных, с другой стороны, являются способом организации данных в памяти компьютера. Структуры данных могут быть полезны для оптимизации определенных операций, таких как поиск, сортировка и вставка или удаление данных. Некоторые примеры структур данных включают массивы, связные списки, деревья и графы, которые мы разберем чуть позже"}),(0,r.jsx)(s.Z,{children:"Алгоритмы и структуры данных составляют основу многих компьютерных программ и являются важными инструментами для решения сложных задач в областях, таких как математика, инженерия и наука"})]}),(0,r.jsxs)(h.Z,{title:"2. СЛОЖНОСТЬ АЛГОРИТМОВ",id:"big-o",children:[(0,r.jsx)(s.Z,{children:"Сложность алгоритма относится к тому, как эффективно алгоритм использует вычислительные ресурсы, такие как время и память, для решения проблемы. Обычно это измеряется в терминах временной сложности и пространственной сложности. Временная сложность - это количество времени, необходимое для завершения алгоритма, а пространственная сложность - это количество памяти, которое алгоритм использует."}),(0,r.jsx)(s.Z,{children:"Big O нотация - это способ выражения временной сложности алгоритма в виде функции размера его входных данных. Она используется для описания наихудшего сценария, или верхней границы, временной сложности алгоритма. Например, если алгоритм занимает 2n + 5 шагов для завершения, мы бы выразили его временную сложность в виде большой O-нотации как O(n), где n представляет размер входных данных."}),(0,r.jsx)(s.Z,{children:"Big O имеет различные общие классы временных сложностей, такие как O(1), O(log n), O(n), O(n log n), O(n^2), O(2^n) и O(n!). Эти классы отражают, как растет временная сложность алгоритма при увеличении размера входных данных. В целом, по мере роста размера входных данных мы хотим, чтобы временная сложность алгоритма росла медленнее всего, что означает, что мы хотим выбирать алгоритмы с меньшими классами временной сложности, когда это возможно."}),(0,r.jsx)(s.Z,{children:"В целом, понимание сложности алгоритма и Big O нотации является важным для проектирования и реализации эффективных алгоритмов, которые могут экономить время и вычислительные ресурсы при решении сложных задач."})]}),(0,r.jsx)(h.Z,{title:"3. ARRAY И LINKED LIST",id:"arrays",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsxs)(h.Z,{title:"4. РЕКУРСИЯ",id:"recursion",children:[(0,r.jsx)(s.Z,{children:"Рекурсия - это концепция программирования, при которой функция вызывает саму себя повторно до тех пор, пока не достигнет базового случая, когда функция перестает вызывать себя и возвращает окончательный результат. Рекурсию можно определить как повторяющийся процесс, в котором проблема разбивается на более мелкие подпроблемы того же типа, пока они не станут достаточно маленькими для прямого решения."}),(0,r.jsx)(s.Z,{children:"Рабочий принцип рекурсии прост - функция вызывает саму себя с менее сложной проблемой, пока проблему нельзя решить без рекурсии. Рекурсия часто используется в алгоритмах, которым требуется повторное выполнение процесса с другим входом или набором входных данных каждый раз."}),(0,r.jsx)(s.Z,{children:"Существуют две основные части рекурсивной функции: базовый случай, который определяет условие остановки (когда функция больше не вызывает себя), и рекурсивный случай (где функция вызывает саму себя с обновленными входными параметрами)."}),(0,r.jsx)(s.Z,{children:"Рекурсия является мощным инструментом для решения сложных проблем, имеющих несколько шагов, где каждый шаг требует того же типа вычислений, что и предыдущий шаг. Она часто используется в структурах данных, таких как деревья и графы, где структура данных естественным образом рекурсивна."})]}),(0,r.jsxs)(h.Z,{title:"5. АЛГОРИТМЫ ПОИСКА",id:"searching",children:[(0,r.jsx)(s.Z,{children:"Алгоритмы поиска в массиве - это набор техник и методов, которые используются для поиска определенных элементов или значений в массиве или списке элементов. Существует несколько популярных алгоритмов поиска в массиве, которые обычно используются, включая линейный поиск, двоичный поиск, интерполяционный поиск и экспоненциальный поиск."}),(0,r.jsx)(s.Z,{children:"1. Линейный поиск: это простейший алгоритм поиска, который ищет каждый элемент массива или списка и сравнивает его с целевым элементом до тех пор, пока не будет найдено соответствие. Линейный поиск имеет временную сложность O(n), где n - размер массива."}),(0,r.jsx)(s.Z,{children:"2. Двоичный поиск: это более эффективный алгоритм, который требует, чтобы массив был отсортирован в порядке. Он начинает свой поиск целевого элемента, рассматривая среднюю точку массива, а затем устраняет половину элементов, сравнивая целевой элемент с серединой. Двоичный поиск имеет временную сложность O(log n), где n - размер массива."}),(0,r.jsx)(s.Z,{children:"3. Интерполяционный поиск: это еще один вариант двоичного поиска, который используется, когда элементы в массиве равномерно распределены. Он использует формулу для оценки местоположения целевого элемента в массиве, а затем выполняет двоичный поиск. Интерполяционный поиск имеет временную сложность O(log log n), что быстрее, чем двоичный поиск."}),(0,r.jsx)(s.Z,{children:"4. Экспоненциальный поиск: это гибридный алгоритм, который объединяет как линейный, так и двоичный поиск. Он начинает поиск, рассматривая первый элемент, а затем увеличивает интервал в степени двойки до тех пор, пока не будет найден целевой элемент. Экспоненциальный поиск имеет временную сложность O(log n), что также совпадает с двоичным поиском."}),(0,r.jsx)(s.Z,{children:"В целом, выбор конкретного алгоритма поиска в массиве зависит от размера массива, распределения элементов в массиве и количества времени, доступного для поиска."})]}),(0,r.jsx)(h.Z,{title:"6. АЛГОРИТМЫ СОРТИРОВКИ",id:"sorting",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"7. QUEUE И STACK",id:"queues",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"8. ЭВРИСТИЧЕСКИЕ МЕТОДЫ",id:"heuristic-methods",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"9. ХЭШ-ТАБЛИЦЫ И ХЭШ-ФУНКЦИИ",id:"hashmap",children:(0,r.jsxs)(s.Z,{children:["Хеш-таблицы - это тип структуры данных, позволяющий эффективно хранить и извлекать пары ",'"ключ-значение"',". Они используют хеш-функцию для отображения каждого ключа в индекс массива, что позволяет мгновенно находить значения. Это делает хеш-таблицы полезными для задач, где важно быстрое время поиска, таких как кэширование, индексирование и операции с базами данных. Однако могут возникать коллизии, когда два разных ключа отображаются на один и тот же индекс, что требует дополнительных шагов для разрешения конфликтов. В целом, хеш-таблицы предоставляют мощный инструмент для организации и эффективного доступа к данным."]})}),(0,r.jsx)(h.Z,{title:"10. НЕВЗВЕШЕННЫЙ ГРАФ И АЛГОРИТМЫ ПОИСКА",id:"unweighted-graph",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"11. ВЗВЕШЕННЫЙ ГРАФ И АЛГОРИТМЫ НАХОЖДЕНИЯ КРАТЧАЙШЕГО ПУТИ",id:"weighted-graph",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"12. ДЕРЕВЬЯ И АЛГОРИТМЫ ДЛЯ РАБОТЫ С НИМИ",id:"trees",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"13. ЖАДНЫЕ АЛГОРИТМЫ",id:"greedy-algorithms",children:(0,r.jsx)(s.Z,{children:"1"})}),(0,r.jsx)(h.Z,{title:"14. ДИНАМИЧЕСКОЕ ПРОГРАММИРОВАНИЕ",id:"dynamic-programming",children:(0,r.jsx)(s.Z,{children:"1"})})]}),p=i(702);var g=()=>(0,r.jsx)(p.Z,{heading:"ВАЖНЫЕ АЛГОРИТМЫ И СТРУКТУРЫ ДАННЫХ",descTitle:"Структуры данных и алгоритмы",description:"Знание алгоритмов и структур данных позволяет найти самый эффективный способ решения задачи",planTitle:"ПЛАН ОБУЧЕНИЯ",planPoints:[{title:"Понятие алгоритмов и структур данных",href:"#algorithms-introduction"},{title:"Сложность алгоритмов, Big O нотация",href:"#big-o"},{title:"Array и Linked List",href:"#arrays"},{title:"Рекурсия",href:"#recursion"},{title:"Алгоритмы поиска",href:"#searching"},{title:"Алгоритмы сортировки",href:"#sorting"},{title:"Queue и Stack",href:"#queues"},{title:"Эвристические методы",href:"#heuristic-methods"},{title:"Хэш-таблицы и хэш-функции",href:"#hashmap"},{title:"Невзвешенный граф и алгоритмы поиска",href:"#unweighted-graph"},{title:"Взвешенный граф и алгоритмы нахождения кратчайшего пути",href:"#weighted-graph"},{title:"Деревья и алгоритмы для работы с ними",href:"#trees"},{title:"Жадные алгоритмы",href:"#greedy-algorithms"},{title:"Динамическое программирование",href:"#dynamic-programming"}],illustration:{imgSrc:"./illustrations/algorithms/hero-illustration.png",width:412,height:261,alt:"",sx:{}}});var x=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(g,{}),(0,r.jsx)(d,{}),(0,r.jsx)(l.Z,{component:a(),href:"/science",variant:"contained",sx:{px:3.75,py:1.2,borderRadius:18,mx:3.5},children:"ПРОДОЛЖИТЬ ПОДГОТОВКУ"})]})}},function(t){t.O(0,[888],(function(){return e=1926,t(t.s=e);var e}));var e=t.O();_N_E=e}]);